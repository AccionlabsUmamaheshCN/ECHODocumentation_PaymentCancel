openapi: 3.1.0
info:
  version: 1.0.0
  title: ECHOHUB Universal Payment Cancel  
  contact:
    email: Echo_Crhc@echohealthinc.com
    url: 'https://echohubDocumentation@echohealthinc.com'
  
 
  description: >    

    API Endpoints for the ECHOHUB Clearing House Project Team

    # Authentication

    Authentication is a process by which a system verifies the identity of a
    user accessing this API.

    


    


  
servers:
  - url: 'https://echohealthinc.com/echoexternalapi'  
security:
  - x-ApiKey: []
  - x-ClientKey: []
tags:
  - name: Payment Cancel
    description: Everything about your Pets
  - name: ACH
    description: Access to Petstore orders
  - name: Medpay
    description: Operations about user
  - name: pet_model  
paths:
  /api/DirectPay/v1/PaymentCancel[ForVCP]:
    parameters:
      - name: Accept-Language
        in: header
        description: 'The language you prefer for messages. Supported values are en-AU, en-CA, en-GB, en-US'
        example: en-US
        required: false
        schema:
          type: string
          default: en-AU
    
    x-codeSamples:
      - lang: 'C#'
        source: |
          using System;
          using System.Net.Http;
          using System.Text;
          using Newtonsoft.Json.Linq;
          public class Program
          {
          private readonly IHttpClientFactory _httpClientFactory;
          public static async Task Main(string[] args)
          {
            var client = _httpClientFactory.CreateClient();
            client.DefaultRequestHeaders.Add("x-RequestUrl", "string");
            client.DefaultRequestHeaders.Add("x-RequestFromAPP", "string");
            client.DefaultRequestHeaders.Add("x-Authorization", "string");
            client.DefaultRequestHeaders.Add("x-AccessId", "string");
            JObject json = JObject.Parse(@"{
              RequestValueType: 'string',
              RequestValue: 'string',
              LibraryMethod: 'string'
              }"); 
  #Authorization
  /api/DirectPay/v1/PaymentCancel[ACH]:
    parameters:
      - name: Accept-Language
        in: header
        description: 'The language you prefer for messages. Supported values are en-AU, en-CA, en-GB, en-US'
        example: en-US
        required: false
        schema:
          type: string
          default: en-AU
      - name: cookieParam
        in: cookie
        description: Some cookie
        required: true
        schema:
          type: integer
          format: int64
    post:
      tags:
        - Payment Cancel
      summary: Add a new pet to the store
      description: Add new pet to the store inventory.
      operationId: addPet
      responses:
        '405':
          description: Invalid input
      # security:
      #   - petstore_auth:
      #       - 'write:pets'
      #       - 'read:pets'
      x-codeSamples:
        - lang: 'C#'
          source: |
            using System;
            using System.Net.Http;
            using System.Text;
            using Newtonsoft.Json.Linq;
            public class Program
            {
            private readonly IHttpClientFactory _httpClientFactory;
            public static async Task Main(string[] args)
            {
              var client = _httpClientFactory.CreateClient();
              client.DefaultRequestHeaders.Add("x-RequestUrl", "string");
              client.DefaultRequestHeaders.Add("x-RequestFromAPP", "string");
              client.DefaultRequestHeaders.Add("x-Authorization", "string");
              client.DefaultRequestHeaders.Add("x-AccessId", "string");
              JObject json = JObject.Parse(@"{
                RequestValueType: 'string',
                RequestValue: 'string',
                LibraryMethod: 'string'
                }");
              var postData = new StringContent(json.ToString(), Encoding.UTF8, "application/json");
              var request = await 
              client.PostAsync("https://sandbox.echohealthincapi.com/api/DirectPay/v1/PaymentCancel", postData);      
            var response = await request.Content.ReadAsStringAsync();
            Console.WriteLine(response);
            PetStoreResponse response = pet.create22();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: PHP
          source: |
            $form = new \PetStore\Entities\Pet();
            $form->setPetType("Dog");
            $form->setName("Rex");
            // set other fields
            try {
                $pet = $client->pets()->create($form);
            } catch (UnprocessableEntityException $e) {
                var_dump($e->getErrors());
            }
      # requestBody:
      #   $ref: paths/UniversalCancel/api@DirectPay@v1@UniversalACHCancel.yaml
    put:
      tags:
        - Payment Cancel
      summary: Update an existing pet
      description: ''
      operationId: updatePet
      responses:
        '200':
          description: Invalid ID supplied
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      # security:
      #   # - petstore_auth:
        #     - 'write:pets'
        #     - 'read:pets'
      x-codeSamples:
        - lang: PHP
          source: |
            $form = new \PetStore\Entities\Pet();
            $form->setPetId(1);
            $form->setPetType("Dog");
            $form->setName("Rex");
            // set other fields
            try {
                $pet = $client->pets()->update($form);
            } catch (UnprocessableEntityException $e) {
                var_dump($e->getErrors());
            }
      # requestBody:
      #   $ref: paths/UniversalCancel/api@DirectPay@v1@UniversalACHCancel.yaml
    
  # #Universal Payment Cancel
  # /api/DirectPay/v1/PaymentCancel :
  #   $ref: paths/UniversalCancel/api@DirectPay@v1@UniversalACHCancel.yaml
  # /api/DirectPay/v1/PaymentCance:
  #   $ref: paths/UniversalCancel/api@DirectPay@v1@UniversalDeluxeCancel.yaml
  # /api/DirectPay/v1/PaymentCancel [For Direct To Debit] :
  #   $ref: paths/UniversalCancel/api@DirectPay@v1@UniversalDirectToDebitCancel.yaml
  # /api/DirectPay/v1/PaymentCancel [For Venmo] :
  #   $ref: paths/UniversalCancel/api@DirectPay@v1@UniversalVenmoCancel.yaml
  # /api/DirectPay/v1/PaymentCancel [For Zelle] :
  #   $ref: paths/UniversalCancel/api@DirectPay@v1@UniversalZelleCancel.yaml
  # /api/DirectPay/v1/PaymentCancel [For VCP] :
  #   $ref: paths/UniversalCancel/api@DirectPay@v1@UniversalVCPCancel.yaml
      
components:
  securitySchemes:
    x-ApiKey:
      type: apiKey
      name: x-ApiKey
      description: The API key.
      in: header
    x-ClientKey:
      type: apiKey
      description: The client key.
      name: x-ClientKey
      in: header
    ApiKeyAuth:
      type: apiKey
      name: x-Authorization
      in: header
      description: Requests should pass an api_key header.  
    
# tags: 
#    #Authorization
#   - name: Authorization 
#     description: |
#       This endpoint helps to generate the Authorization Token for accessing the endpoints. 
#    #Universal Payment Cancel
#   - name: Payment Cancel
#     description: | 
#            The  Payment Cancel endpoint allows the API user to access and cancel a payment that may be Direct to Debit, Venmo, Zelle, or a Virtual Card based on the Library method. This endpoint helps validate and call a particular API internally based on the unique Payor Reference ID. This is used for in-house application only.         